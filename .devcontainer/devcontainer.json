{
  "customizations": {
    "vscode": {
      "extensions": [
        "donjayamanne.githistory",
        "esbenp.prettier-vscode",
        "streetsidesoftware.code-spell-checker",
        "Thinker.sort-json"
      ],
      "settings": {
        "[javascript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[javascriptreact]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[jsonc]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[markdown]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[typescriptreact]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[yaml]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "cSpell.words": ["icer", "devcontainers"],
        "editor.rulers": [80],
        "typescript.inlayHints.enumMemberValues.enabled": true,
        "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
        "typescript.inlayHints.parameterNames.enabled": "all",
        "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
        "typescript.inlayHints.parameterTypes.enabled": true,
        "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
        "typescript.inlayHints.variableTypes.enabled": true,
        "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true
      }
    }
  },
  "dockerComposeFile": "./compose.yaml",
  "overrideCommand": true,
  "postCreateCommand": "npm install --workspaces",
  "service": "icer",
  "workspaceFolder": "/icer"
}
